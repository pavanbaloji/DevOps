//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Avista.ESB.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AvistaESBLookupEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AvistaESBLookupEntities object using the connection string found in the 'AvistaESBLookupEntities' section of the application configuration file.
        /// </summary>
        public AvistaESBLookupEntities() : base("name=AvistaESBLookupEntities", "AvistaESBLookupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AvistaESBLookupEntities object.
        /// </summary>
        public AvistaESBLookupEntities(string connectionString) : base(connectionString, "AvistaESBLookupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AvistaESBLookupEntities object.
        /// </summary>
        public AvistaESBLookupEntities(EntityConnection connection) : base(connection, "AvistaESBLookupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldRequestOrderReason> FieldRequestOrderReasons
        {
            get
            {
                if ((_FieldRequestOrderReasons == null))
                {
                    _FieldRequestOrderReasons = base.CreateObjectSet<FieldRequestOrderReason>("FieldRequestOrderReasons");
                }
                return _FieldRequestOrderReasons;
            }
        }
        private ObjectSet<FieldRequestOrderReason> _FieldRequestOrderReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldRequestResolution> FieldRequestResolutions
        {
            get
            {
                if ((_FieldRequestResolutions == null))
                {
                    _FieldRequestResolutions = base.CreateObjectSet<FieldRequestResolution>("FieldRequestResolutions");
                }
                return _FieldRequestResolutions;
            }
        }
        private ObjectSet<FieldRequestResolution> _FieldRequestResolutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EsbFaultEvent> EsbFaultEvents
        {
            get
            {
                if ((_EsbFaultEvents == null))
                {
                    _EsbFaultEvents = base.CreateObjectSet<EsbFaultEvent>("EsbFaultEvents");
                }
                return _EsbFaultEvents;
            }
        }
        private ObjectSet<EsbFaultEvent> _EsbFaultEvents;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldRequestOrderReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldRequestOrderReasons(FieldRequestOrderReason fieldRequestOrderReason)
        {
            base.AddObject("FieldRequestOrderReasons", fieldRequestOrderReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldRequestResolutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldRequestResolutions(FieldRequestResolution fieldRequestResolution)
        {
            base.AddObject("FieldRequestResolutions", fieldRequestResolution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EsbFaultEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEsbFaultEvents(EsbFaultEvent esbFaultEvent)
        {
            base.AddObject("EsbFaultEvents", esbFaultEvent);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AvistaEsbLookupModel", Name="EsbFaultEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EsbFaultEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EsbFaultEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSource">Initial value of the EventSource property.</param>
        /// <param name="faultSvcName">Initial value of the FaultSvcName property.</param>
        /// <param name="faultType">Initial value of the FaultType property.</param>
        public static EsbFaultEvent CreateEsbFaultEvent(global::System.Int32 eventId, global::System.String eventType, global::System.String eventSource, global::System.String faultSvcName, global::System.String faultType)
        {
            EsbFaultEvent esbFaultEvent = new EsbFaultEvent();
            esbFaultEvent.EventId = eventId;
            esbFaultEvent.EventType = eventType;
            esbFaultEvent.EventSource = eventSource;
            esbFaultEvent.FaultSvcName = faultSvcName;
            esbFaultEvent.FaultType = faultType;
            return esbFaultEvent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, "EventId");
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false, "EventType");
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventSource
        {
            get
            {
                return _EventSource;
            }
            set
            {
                OnEventSourceChanging(value);
                ReportPropertyChanging("EventSource");
                _EventSource = StructuralObject.SetValidValue(value, false, "EventSource");
                ReportPropertyChanged("EventSource");
                OnEventSourceChanged();
            }
        }
        private global::System.String _EventSource;
        partial void OnEventSourceChanging(global::System.String value);
        partial void OnEventSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FaultSvcName
        {
            get
            {
                return _FaultSvcName;
            }
            set
            {
                if (_FaultSvcName != value)
                {
                    OnFaultSvcNameChanging(value);
                    ReportPropertyChanging("FaultSvcName");
                    _FaultSvcName = StructuralObject.SetValidValue(value, false, "FaultSvcName");
                    ReportPropertyChanged("FaultSvcName");
                    OnFaultSvcNameChanged();
                }
            }
        }
        private global::System.String _FaultSvcName;
        partial void OnFaultSvcNameChanging(global::System.String value);
        partial void OnFaultSvcNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FaultType
        {
            get
            {
                return _FaultType;
            }
            set
            {
                if (_FaultType != value)
                {
                    OnFaultTypeChanging(value);
                    ReportPropertyChanging("FaultType");
                    _FaultType = StructuralObject.SetValidValue(value, false, "FaultType");
                    ReportPropertyChanged("FaultType");
                    OnFaultTypeChanged();
                }
            }
        }
        private global::System.String _FaultType;
        partial void OnFaultTypeChanging(global::System.String value);
        partial void OnFaultTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AvistaEsbLookupModel", Name="FieldRequestOrderReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldRequestOrderReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldRequestOrderReason object.
        /// </summary>
        /// <param name="fldRequestType">Initial value of the FldRequestType property.</param>
        /// <param name="fldReasonCode">Initial value of the FldReasonCode property.</param>
        /// <param name="fldReasonDesc">Initial value of the FldReasonDesc property.</param>
        public static FieldRequestOrderReason CreateFieldRequestOrderReason(global::System.String fldRequestType, global::System.String fldReasonCode, global::System.String fldReasonDesc)
        {
            FieldRequestOrderReason fieldRequestOrderReason = new FieldRequestOrderReason();
            fieldRequestOrderReason.FldRequestType = fldRequestType;
            fieldRequestOrderReason.FldReasonCode = fldReasonCode;
            fieldRequestOrderReason.FldReasonDesc = fldReasonDesc;
            return fieldRequestOrderReason;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FldRequestType
        {
            get
            {
                return _FldRequestType;
            }
            set
            {
                if (_FldRequestType != value)
                {
                    OnFldRequestTypeChanging(value);
                    ReportPropertyChanging("FldRequestType");
                    _FldRequestType = StructuralObject.SetValidValue(value, false, "FldRequestType");
                    ReportPropertyChanged("FldRequestType");
                    OnFldRequestTypeChanged();
                }
            }
        }
        private global::System.String _FldRequestType;
        partial void OnFldRequestTypeChanging(global::System.String value);
        partial void OnFldRequestTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FldReasonCode
        {
            get
            {
                return _FldReasonCode;
            }
            set
            {
                if (_FldReasonCode != value)
                {
                    OnFldReasonCodeChanging(value);
                    ReportPropertyChanging("FldReasonCode");
                    _FldReasonCode = StructuralObject.SetValidValue(value, false, "FldReasonCode");
                    ReportPropertyChanged("FldReasonCode");
                    OnFldReasonCodeChanged();
                }
            }
        }
        private global::System.String _FldReasonCode;
        partial void OnFldReasonCodeChanging(global::System.String value);
        partial void OnFldReasonCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FldReasonDesc
        {
            get
            {
                return _FldReasonDesc;
            }
            set
            {
                OnFldReasonDescChanging(value);
                ReportPropertyChanging("FldReasonDesc");
                _FldReasonDesc = StructuralObject.SetValidValue(value, false, "FldReasonDesc");
                ReportPropertyChanged("FldReasonDesc");
                OnFldReasonDescChanged();
            }
        }
        private global::System.String _FldReasonDesc;
        partial void OnFldReasonDescChanging(global::System.String value);
        partial void OnFldReasonDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InactiveDate
        {
            get
            {
                return _InactiveDate;
            }
            set
            {
                OnInactiveDateChanging(value);
                ReportPropertyChanging("InactiveDate");
                _InactiveDate = StructuralObject.SetValidValue(value, "InactiveDate");
                ReportPropertyChanged("InactiveDate");
                OnInactiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InactiveDate;
        partial void OnInactiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInactiveDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AvistaEsbLookupModel", Name="FieldRequestResolution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldRequestResolution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldRequestResolution object.
        /// </summary>
        /// <param name="fldResolutionCode">Initial value of the FldResolutionCode property.</param>
        /// <param name="fldResolutionDesc">Initial value of the FldResolutionDesc property.</param>
        public static FieldRequestResolution CreateFieldRequestResolution(global::System.String fldResolutionCode, global::System.String fldResolutionDesc)
        {
            FieldRequestResolution fieldRequestResolution = new FieldRequestResolution();
            fieldRequestResolution.FldResolutionCode = fldResolutionCode;
            fieldRequestResolution.FldResolutionDesc = fldResolutionDesc;
            return fieldRequestResolution;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FldResolutionCode
        {
            get
            {
                return _FldResolutionCode;
            }
            set
            {
                if (_FldResolutionCode != value)
                {
                    OnFldResolutionCodeChanging(value);
                    ReportPropertyChanging("FldResolutionCode");
                    _FldResolutionCode = StructuralObject.SetValidValue(value, false, "FldResolutionCode");
                    ReportPropertyChanged("FldResolutionCode");
                    OnFldResolutionCodeChanged();
                }
            }
        }
        private global::System.String _FldResolutionCode;
        partial void OnFldResolutionCodeChanging(global::System.String value);
        partial void OnFldResolutionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FldResolutionDesc
        {
            get
            {
                return _FldResolutionDesc;
            }
            set
            {
                OnFldResolutionDescChanging(value);
                ReportPropertyChanging("FldResolutionDesc");
                _FldResolutionDesc = StructuralObject.SetValidValue(value, false, "FldResolutionDesc");
                ReportPropertyChanged("FldResolutionDesc");
                OnFldResolutionDescChanged();
            }
        }
        private global::System.String _FldResolutionDesc;
        partial void OnFldResolutionDescChanging(global::System.String value);
        partial void OnFldResolutionDescChanged();

        #endregion

    }

    #endregion

}
